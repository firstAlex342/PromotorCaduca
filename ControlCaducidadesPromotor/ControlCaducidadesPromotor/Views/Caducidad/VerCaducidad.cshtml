@using ControlCaducidadesPromotor.Basicos
@model List<TiendaViewModel>
@{
    ViewBag.Title = "VerCaducidad";
    Layout = "~/Views/Shared/MiLayout.cshtml";
}


@section MisFuncionesJavaScript
{
    <script type="text/javascript">
        'use strict';
        var x = $(document);
        x.ready(InicializarEventos);

        function InicializarEventos() {
            $(".form_date").datetimepicker({
                language: 'es',
                weekStart: 1,
                todayBtn: 1,
                autoclose: 1,
                todayHighlight: 0,
                startView: 2,
                minView: 2,
                forceParse: 0
            });

            $("#btnBuscar").click(BuscarCaducidades);
            EstilizarConDataTables('#miTablaCaducidadesEnTienda');
        }


        function BuscarCaducidades() {            
                var validacion = EstaSeleccionadaTiendaYFechas(document.getElementById('tiendasLista'), $('#miFechaInicial').val(), $('#miFechaFinal').val());
                if (validacion.length == 0) {
                    //Obtener el id de la tienda
                    var controlSelect = document.getElementById('tiendasLista');
                    var idDeTienda = controlSelect.options[controlSelect.selectedIndex].value;


                    //Extraer info de la fecha inicial
                    var fechaInicial = $('#miFechaInicial').val();
                    fechaInicial = fechaInicial.replace(' ', '/'); // si esta 15 Mayo 2020, regresa 15/Mayo 2020
                    fechaInicial = fechaInicial.replace(' ', '/');  //Si esta 15/Mayo 2020, regresa 15/Mayo/2020
                    fechaInicial = fechaInicial + ' 00:00:00 a.m.'; //La cadena queda en el formato 15/Mayo/2020 00:00:00 a.m.
                    fechaInicial = SubstituirPalabraMesConNumero(fechaInicial); //La cadena queda en el formato 15/05/2021 00:00:00 a.m.

                    var auxFechaDeCaducidadInicial = new FechaHoraSinMiliSegundos(fechaInicial);
                    //auxFechaDeCaducidadInicial.GenerarEnSintaxisCadena()

                    //Extraer info de la fecha final
                    var fechaFinal = $('#miFechaFinal').val();
                    fechaFinal = fechaFinal.replace(' ', '/');  // si esta 15 Mayo 2020, regresa 15/Mayo 2020
                    fechaFinal = fechaFinal.replace(' ', '/');  //Si esta 15/Mayo 2020, regresa 15/Mayo/2020
                    fechaFinal = fechaFinal + ' 11:59:59 p.m.'; //La cadena queda en el formato 15/Mayo/2020 00:00:00 a.m.
                    fechaFinal = SubstituirPalabraMesConNumero(fechaFinal); //La cadena queda en el formato 15/05/2021 00:00:00 a.m.

                    var auxFechaCaducidadFinal = new FechaHoraSinMiliSegundos(fechaFinal);
                    // auxFechaCaducidadFinal.GenerarEnSintaxisCadena();

                    //Se llama al controlador Caducidad.BuscarCaducidad()

                    var objetoASerializar = {
                        IdTienda: idDeTienda,
                        FechaInicial: auxFechaDeCaducidadInicial.GenerarEnSintaxisCadena(),
                        FechaFinal: auxFechaCaducidadFinal.GenerarEnSintaxisCadena(),
                        IdUsuarioAlta: 0,
                        FechaAlta: auxFechaCaducidadFinal.GenerarEnSintaxisCadena(),
                        IdUsuarioModifico: 0,
                        FechaModificacion: auxFechaCaducidadFinal.GenerarEnSintaxisCadena(),
                        Activo: true
                    };

                    $.ajax({
                        url: "/Caducidad/BuscarCaducidad",
                        data: JSON.stringify(objetoASerializar),
                        type: "POST",                   //Uso post para enviar una consulta que requiere varios datos. Se pudo usar get.
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            //https://stackoverflow.com/questions/26605065/jquery-ajax-return-success-error-from-mvc-net-controller
                            // https://patrickdesjardins.com/blog/returning-a-jsonresult-within-the-error-function-of-jquery-ajax
                            if (result.success != true) {
                                $('#imagenWaiting').attr('style', 'display:none');
                                $('#controlesAdicionales').hide();
                                $('#btnBuscar').hide();
                                var objetoDataTable = $('#miTablaCaducidadesEnTienda').DataTable();  //Genero un objeto dataTable
                                objetoDataTable.destroy();  //lo desconecto de las propiedades dataTable (paso necesario para poder modificar la <table>), no se destruye el contenido de la <table></table>
                                $('#miTablaCaducidadesEnTienda').hide();
                                $('#miTablaCaducidadesEnTienda tbody').empty();  //destruyo el contenido
                                //alert(result.responseText);
                                document.getElementById("mensajes").innerHTML = "<ul><li>" + result.responseText + "</li></ul>";
                            }
                            else {
                                //alert();
                                $('#imagenWaiting').attr('style', 'display:none');

                                var html = '';
                                $.each(result.laRespuesta, function (key, item) {
                                    html = '<tr>';
                                    html += '<td>' + item.MiCaducaViewModel.IdProducto + '</td>';  //van a ser 16
                                    html += '<td>' + item.MiCaducaViewModel.IdPeriodo + '</td>';
                                    html += '<td>' + item.MiProductoJoinProductoConDetallesJoinDetalleProductoViewModel.Producto_Id + '</td>';
                                    html += '<td>' + item.MiProductoJoinProductoConDetallesJoinDetalleProductoViewModel.Producto_CodigoBarras + '</td>';
                                    html += '<td>' + item.MiProductoJoinProductoConDetallesJoinDetalleProductoViewModel.ProductoConDetalles_IdProducto + '</td>';
                                    html += '<td>' + item.MiProductoJoinProductoConDetallesJoinDetalleProductoViewModel.ProductoConDetalles_IdDetalleProducto + '</td>';
                                    html += '<td>' + item.MiProductoJoinProductoConDetallesJoinDetalleProductoViewModel.DetalleProducto_Id + '</td>';
                                    html += '<td>' + item.MiProductoJoinProductoConDetallesJoinDetalleProductoViewModel.DetalleProducto_Nombre + '</td>';
                                    html += '<td>' + item.MiPeriodoViewModel.Id + '</td>';
                                    var miFechaCaducidad = new Date(parseInt(item.MiPeriodoViewModel.FechaCaducidad.substr(6)));
                                    var miF = miFechaCaducidad.getFullYear().toString() + '-' + (miFechaCaducidad.getMonth() + 1).toString() + '-' + miFechaCaducidad.getDate().toString();
                                    html += '<td>' + miF + '</td>';
                                    html += '<td>' + item.MiPeriodoViewModel.NumeroUnidades + '</td>';
                                    html += '<td>' + item.MiPeriodoViewModel.Vigente + '</td>';
                                    html += '<td>' + item.MiPeriodoConUnidadViewModel.IdPeriodo + '</td>';
                                    html += '<td>' + item.MiPeriodoConUnidadViewModel.IdUnidad + '</td>';
                                    html += '<td>' + item.MiUnidadMedidaViewModel.Id + '</td>';
                                    html += '<td>' + item.MiUnidadMedidaViewModel.Nombre + '</td>';
                                    html += '</tr>';
                                    $('#miTablaCaducidadesEnTienda tbody').append(html);
                                });

                                $('#controlesAdicionales').show();
                                $('#btnBuscar').show();
                                $('#miTablaCaducidadesEnTienda').show();
                                EstilizarConDataTables('#miTablaCaducidadesEnTienda');
                            }

                        },
                        beforeSend: function () {
                            $('#mensajes').empty(); //destruyo el contenido
                            $('#imagenWaiting').attr('style', '');
                            $('#controlesAdicionales').hide();
                            $('#btnBuscar').hide();
                            var objetoDataTable = $('#miTablaCaducidadesEnTienda').DataTable();  //Genero un objeto dataTable
                            objetoDataTable.destroy();  //lo desconecto de las propiedades dataTable (paso necesario para poder modificar la <table>), no se destruye el contenido de la <table></table>
                            $('#miTablaCaducidadesEnTienda').hide();
                            $('#miTablaCaducidadesEnTienda tbody').empty();  //destruyo el contenido
                        },

                        complete: function () {
                            //Called after runtime call success and error functions
                        },
                        error: function (errormessage) {
                            //DeshabilitarBtnAgregar();
                            //alert(errormessage.responseText);
                        }
                    });
                }

                else {
                    document.getElementById("mensajes").innerHTML = "<ul><li>Verifique que selecciono la tienda y las fechas.</li></ul>";
                }
        }


        function SubstituirPalabraMesConNumero(texto) {
            if (texto.indexOf('Enero') != -1) {
                var nuevoTexto = texto.replace('Enero', '01');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Febrero') != -1) {
                var nuevoTexto = texto.replace('Febrero', '02');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Marzo') != -1) {
                var nuevoTexto = texto.replace('Marzo', '03');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Abril') != -1) {
                var nuevoTexto = texto.replace('Abril', '04');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Mayo') != -1) {
                var nuevoTexto = texto.replace('Mayo', '05');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Junio') != -1) {
                var nuevoTexto = texto.replace('Junio', '06');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Julio') != -1) {
                var nuevoTexto = texto.replace('Julio', '07');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Agosto') != -1) {
                var nuevoTexto = texto.replace('Agosto', '08');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Septiembre') != -1) {
                var nuevoTexto = texto.replace('Septiembre', '09');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Octubre') != -1) {
                var nuevoTexto = texto.replace('Octubre', '10');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Noviembre') != -1) {
                var nuevoTexto = texto.replace('Noviembre', '11');
                return (nuevoTexto);
            }

            else if (texto.indexOf('Diciembre') != -1) {
                var nuevoTexto = texto.replace('Diciembre', '12');
                return (nuevoTexto);
            }
        }

        function EstilizarConDataTables(nomTabla) {
            //https://datatables.net/manual/data/
            var objetoDataTable = $(nomTabla).DataTable();  //Genero un objeto dataTable
            objetoDataTable.destroy(); //lo desconecto de las propiedades dataTable (paso necesario para poder modificar la <table>), no se destruye el contenido de la <table></table>

            if (nomTabla === '#miTablaCaducidadesEnTienda') {
                $(nomTabla).DataTable({
                    language: {
                        url: '../Scripts/DataTables/Spanish.json'
                    },                  //https://datatables.net/manual/options
                    searching: false, //https://datatables.net/reference/option/columns.searchable
                    order: [],      //https://datatables.net/reference/option/order
                    columnDefs: [{ targets: [0, 1, 2, 4, 5, 6, 8, 12, 13, 14], visible: false }]  //https://datatables.net/reference/option/columnDefs
                });
            }
        }

        function EstaSeleccionadaTiendaYFechas(control, fechaInicial, fechaFinal) {
            var posiblesErrores = "";
            if (control.selectedIndex == -1) {
                posiblesErrores = "Seleccione alguna tienda."
            }

            if (fechaInicial.length < 5 || fechaFinal.length < 5) {
                posiblesErrores = posiblesErrores += " Es necesario elegir las fechas";
            }

            return (posiblesErrores);
        }
    </script>
}

@section Contenido
{
    <h3>Ver caducidad</h3>
    <h4>En la lista de tiendas se debe mostar la fecha alta y fecha modificacion de cada tienda?</h4>
    <div class="text-danger" id="mensajes">@Html.ValidationSummary(false, "", new { @class = "text-danger" })</div>
    <div class="row" id="controlesAdicionales">
        <div class="col-sm-4">
            <div class="form-group">
                <label for="tiendasLista">Tienda</label>
                <select class="form-control" id="tiendasLista">
                    @{
                        foreach (var item in Model)
                        {
                            <option value="@item.Id">@item.Nombre</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <label for="dtp_input1" class="control-label">Fecha inicial</label>
                <div class="input-group date form_date" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input1" data-link-format="yyyy-mm-dd">
                    <input class="form-control" id="miFechaInicial" size="16" type="text" value="" readonly>
                    <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div>
                <input type="hidden" id="dtp_input1" value="" /><br />
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <label for="dtp_input2" class="control-label">Fecha final</label>
                <div class="input-group date form_date" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    <input class="form-control" id="miFechaFinal" size="16" type="text" value="" readonly>
                    <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div>
                <input type="hidden" id="dtp_input2" value="" /><br />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-4 col-sm-offset-8">
            <div class="form-group">
                <button type="submit" class="btn btn-primary pull-right" id="btnBuscar">Buscar</button>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-sm-4"></div>
        <div class="col-sm-4">
            @* diferencia entre display vs hiden https://www.w3schools.com/css/css_display_visibility.asp*@
            <img id="imagenWaiting" src="~/Content/MisImagenes/imgWaiting.gif" class="img-responsive center-block" style="display:none" />
        </div>
        <div class="col-sm-4"></div>
    </div>


    <div class="row">
        <div class="col-sm-12">
            <div class="table-responsive">
                @*NO le asignes clases bootstrap a la table porque DataTables la personalizara*@
                @*Despues vi que si funciona usar clases bootstrap 3  https://datatables.net/examples/styling/bootstrap*@
                <table id="miTablaCaducidadesEnTienda" class="table table-striped" style="width:100%">
                    <thead>
                        <tr>
                            <th>Caduca_IdProducto</th>  @*era th style="display:none;"*@
                            <th>Caduca_IdPeriodo</th> @*era th style="display:none;"*@
                            <th>Producto_Id</th> @*era th style="display:none;"*@
                            <th>Producto_CodigoBarras</th> @*era th style="display:none;"*@
                            <th>ProductoConDetalles_IdProducto</th> @*era th style="display:none;"*@
                            <th>ProductoConDetalles_IdDetalleProducto</th> @*era th style="display:none;"*@
                            <th>DetalleProducto_Id</th> @*era th style="display:none;"*@
                            <th>DetalleProducto_Nombre </th>
                            <th>Periodo_Id</th>
                            <th>Periodo_FechaCaducidad</th>
                            <th>Periodo_NumeroUnidades</th>
                            <th>Periodo_Vigente</th>
                            <th>PeriodoConUnidad_IdPeriodo</th>
                            <th>PeriodoConUnidad_IdUnidad</th>
                            <th>UnidadMedida_Id</th>
                            <th>UnidadMedida_Nombre</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
}


@section Footer
{ <h5>El footer</h5>
}


